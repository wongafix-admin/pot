{"version":3,"sources":["../../src/account/account.js"],"names":["makeAccount","accountInfo","validAccount","validate","normalAccount","normalize","Object","freeze","email","phone","bank","account_id","account_name","account_nuban","account_type","account_connected","otherInfo","validateName","label","name","length","InvalidPropertyError"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;;;AAEe,SAASA,WAAT,CACXC,WAAW,GAAG,4BAAc,aAAd,CADH,EAEd;AAEG,QAAMC,YAAY,GAAGC,QAAQ,CAACF,WAAD,CAA7B;AACA,QAAMG,aAAa,GAAEC,SAAS,CAACH,YAAD,CAA9B;AACA,SAAOI,MAAM,CAACC,MAAP,CAAcH,aAAd,CAAP;;AAEA,WAASD,QAAT,CAAmB;AACfK,IAAAA,KAAK,GAAG,4BAAc,OAAd,CADO;AAEfC,IAAAA,KAAK,GAAG,4BAAc,OAAd,CAFO;AAGfC,IAAAA,IAAI,GAAG,4BAAc,MAAd,CAHQ;AAIfC,IAAAA,UAAU,GAAG,4BAAc,YAAd,CAJE;AAKfC,IAAAA,YAAY,GAAG,4BAAc,cAAd,CALA;AAMfC,IAAAA,aAAa,GAAG,4BAAc,eAAd,CAND;AAOfC,IAAAA,YAAY,GAAG,4BAAc,cAAd,CAPA;AAQfC,IAAAA,iBAAiB,GAAG,4BAAc,mBAAd,CARL;AASf,OAAGC;AATY,MAUb,EAVN,EAUU;AACNC,IAAAA,YAAY,CAAC,cAAD,EAAiBL,YAAjB,CAAZ;AACAK,IAAAA,YAAY,CAAC,MAAD,EAASP,IAAT,CAAZ;AACA,WAAO;AAACF,MAAAA,KAAD;AAAQC,MAAAA,KAAR;AAAeC,MAAAA,IAAf;AAAqBC,MAAAA,UAArB;AAAiCC,MAAAA,YAAjC;AAA+CC,MAAAA,aAA/C;AAA8DC,MAAAA,YAA9D;AAA4EC,MAAAA,iBAA5E;AAAgG,SAAGC;AAAnG,KAAP;AACD;;AAEH,WAASC,YAAT,CAAuBC,KAAvB,EAA8BC,IAA9B,EAAoC;AAClC,QAAIA,IAAI,CAACC,MAAL,GAAc,CAAlB,EAAqB;AACnB,YAAM,IAAIC,4BAAJ,CACH,WAAUH,KAAM,sCADb,CAAN;AAGD;AACF;;AAED,WAASb,SAAT,CAAoB;AAAEO,IAAAA,YAAF;AAAgBF,IAAAA,IAAhB;AAAsB,OAAGM;AAAzB,GAApB,EAA0D;AACxD,WAAO,EACL,GAAGA,SADE;AAELJ,MAAAA,YAAY,EAAE,yBAAWA,YAAX,CAFT;AAGLF,MAAAA,IAAI,EAAE,yBAAWA,IAAX;AAHD,KAAP;AAKD;AACJ","sourcesContent":["import requiredParam from '../helpers/required-param';\nimport { InvalidPropertyError } from '../helpers/errors';\nimport isValidEmail from '../helpers/is-valid-email.js';\nimport upperFirst from '../helpers/upper-first';\n\nexport default function makeAccount(\n    accountInfo = requiredParam('accountInfo')\n){\n    \n    const validAccount = validate(accountInfo);\n    const normalAccount= normalize(validAccount);\n    return Object.freeze(normalAccount);\n\n    function validate ({\n        email = requiredParam('email'),\n        phone = requiredParam('phone'),\n        bank = requiredParam('bank'),\n        account_id = requiredParam('account_id'),\n        account_name = requiredParam('account_name'),\n        account_nuban = requiredParam('account_nuban'),\n        account_type = requiredParam('account_type'),\n        account_connected = requiredParam('account_connected'),\n        ...otherInfo\n      } = {}) {\n        validateName('account_name', account_name)\n        validateName('bank', bank)\n        return {email, phone, bank, account_id, account_name, account_nuban, account_type, account_connected,  ...otherInfo }\n      }\n    \n    function validateName (label, name) {\n      if (name.length < 2) {\n        throw new InvalidPropertyError(\n          `Account ${label} must be at least 2 characters long.`\n        )\n      }\n    }\n\n    function normalize ({ account_name, bank, ...otherInfo }) {\n      return {\n        ...otherInfo,\n        account_name: upperFirst(account_name),\n        bank: upperFirst(bank)\n      }\n    }\n}\n"],"file":"account.js"}