{"version":3,"sources":["../../src/account/account.js"],"names":["makeAccount","accountInfo","validAccount","validate","normalAccount","normalize","Object","freeze","otherInfo","validateName","label","name","length","InvalidPropertyError"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;;;AAEe,SAASA,WAAT,CACXC,WAAW,GAAG,4BAAc,aAAd,CADH,EAEd;AAEG,QAAMC,YAAY,GAAGC,QAAQ,CAACF,WAAD,CAA7B;AACA,QAAMG,aAAa,GAAEC,SAAS,CAACH,YAAD,CAA9B;AACA,SAAOI,MAAM,CAACC,MAAP,CAAcH,aAAd,CAAP;;AAEA,WAASD,QAAT,CAAmB,EACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAGK;AATY,MAUb,EAVN,EAUU;AACN;AACA;AACA,WAAO,EAAC,GAAGA;AAAJ,KAAP;AACD;;AAEH,WAASC,YAAT,CAAuBC,KAAvB,EAA8BC,IAA9B,EAAoC;AAClC,QAAIA,IAAI,CAACC,MAAL,GAAc,CAAlB,EAAqB;AACnB,YAAM,IAAIC,4BAAJ,CACH,WAAUH,KAAM,sCADb,CAAN;AAGD;AACF;;AAED,WAASL,SAAT,CAAoB,EAAE,GAAGG;AAAL,GAApB,EAAsC;AACpC,WAAO,EACL,GAAGA,SADE,CAEL;AACA;;AAHK,KAAP;AAKD;AACJ","sourcesContent":["import requiredParam from '../helpers/required-param';\nimport { InvalidPropertyError } from '../helpers/errors';\nimport isValidEmail from '../helpers/is-valid-email.js';\nimport upperFirst from '../helpers/upper-first';\n\nexport default function makeAccount(\n    accountInfo = requiredParam('accountInfo')\n){\n    \n    const validAccount = validate(accountInfo);\n    const normalAccount= normalize(validAccount);\n    return Object.freeze(normalAccount);\n\n    function validate ({\n        // email = requiredParam('email'),\n        // phone = requiredParam('phone'),\n        // bank = requiredParam('bank'),\n        // account_id = requiredParam('account_id'),\n        // account_name = requiredParam('account_name'),\n        // account_nuban = requiredParam('account_nuban'),\n        // account_type = requiredParam('account_type'),\n        // account_connected = requiredParam('account_connected'),\n        ...otherInfo\n      } = {}) {\n        //validateName('account_name', account_name)\n        //validateName('bank', bank)\n        return {...otherInfo }\n      }\n    \n    function validateName (label, name) {\n      if (name.length < 2) {\n        throw new InvalidPropertyError(\n          `Account ${label} must be at least 2 characters long.`\n        )\n      }\n    }\n\n    function normalize ({ ...otherInfo }) {\n      return {\n        ...otherInfo,\n        // account_name: upperFirst(account_name),\n        // bank: upperFirst(bank)\n      }\n    }\n}\n"],"file":"account.js"}