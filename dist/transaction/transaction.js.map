{"version":3,"sources":["../../src/transaction/transaction.js"],"names":["makeTransaction","transactionInfo","validTransaction","validate","normalTransaction","normalize","Object","freeze","otherInfo"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;;;AAEe,SAASA,eAAT,CACXC,eAAe,GAAG,4BAAc,iBAAd,CADP,EAEd;AAEG,QAAMC,gBAAgB,GAAGC,QAAQ,CAACF,eAAD,CAAjC;AACA,QAAMG,iBAAiB,GAAGC,SAAS,CAACH,gBAAD,CAAnC;AACA,SAAOI,MAAM,CAACC,MAAP,CAAcH,iBAAd,CAAP;;AAEA,WAASD,QAAT,CAAmB;AACf;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACQ,OAAGK;AAXY,MAYf,EAZJ,EAYQ;AAEJ,WAAO,EAAE,GAAGA;AAAL,KAAP;AACH;AAED;AACJ;AACA;AACA;AACA;AACA;AACA;;;AAEI,WAASH,SAAT,CAAoB,EAAC,GAAGG;AAAJ,GAApB,EAAqC;AAGjC,WAAO,EACH,GAAGA;AADA,KAAP;AAGH;AAED;AACJ;AACA;AACA;AACA;AACA;AACA;;AAEC","sourcesContent":["import requiredParam from '../helpers/required-param';\nimport { InvalidPropertyError } from '../helpers/errors';\nimport isValidEmail from '../helpers/is-valid-email.js';\nimport upperFirst from '../helpers/upper-first';\n\nexport default function makeTransaction(\n    transactionInfo = requiredParam('transactionInfo')\n){\n    \n    const validTransaction = validate(transactionInfo);\n    const normalTransaction = normalize(validTransaction);\n    return Object.freeze(normalTransaction);\n\n    function validate ({\n        /*customer_id = requiredParam('customer_id'),\n        payment_id = requiredParam('payment_id'),\n        amount = requiredParam('amount'),\n        paid_month = requiredParam('paid_month'),\n        paid_year = requiredParam('paid_year'),\n        bank = requiredParam('bank'),\n        account_id = requiredParam('account_id'),\n        account_name = requiredParam('account_name'),\n        account_type = requiredParam('account_type'),\n        status = requiredParam('status'),*/\n        ...otherInfo\n    } = {}) {\n        \n        return { ...otherInfo }\n    }\n\n    /*function validateName (label, name) {\n        if (name.length < 2) {\n            throw new InvalidPropertyError(\n            `Property's ${label} must be at least 2 characters long.`\n            )\n        }\n    }*/\n\n    function normalize ({...otherInfo }) {\n\n        \n        return {\n            ...otherInfo\n        }\n    }\n\n    /*function formatPrice(price){\n        var formatter = new Intl.NumberFormat('en-NG', {\n            style: 'currency',\n            currency: 'NGN',\n        });\n\n        return formatter.price;\n    }*/\n}\n"],"file":"transaction.js"}