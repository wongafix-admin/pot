{"version":3,"sources":["../../src/bank/bank.js"],"names":["makeBank","bankInfo","validBank","validate","normalBank","normalize","Object","freeze","otherInfo","validateName","label","name","length","InvalidPropertyError"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;;;AAEe,SAASA,QAAT,CACXC,QAAQ,GAAG,4BAAc,UAAd,CADA,EAEd;AAEG,QAAMC,SAAS,GAAGC,QAAQ,CAACF,QAAD,CAA1B;AACA,QAAMG,UAAU,GAAGC,SAAS,CAACH,SAAD,CAA5B;AACA,SAAOI,MAAM,CAACC,MAAP,CAAcH,UAAd,CAAP;;AAEA,WAASD,QAAT,CAAmB,EAEf,GAAGK;AAFY,MAGb,EAHN,EAGU;AAEN,WAAO,EAAC,GAAGA;AAAJ,KAAP;AACD;;AAEH,WAASC,YAAT,CAAuBC,KAAvB,EAA8BC,IAA9B,EAAoC;AAClC,QAAIA,IAAI,CAACC,MAAL,GAAc,CAAlB,EAAqB;AACnB,YAAM,IAAIC,4BAAJ,CACH,QAAOH,KAAM,sCADV,CAAN;AAGD;AACF;;AAED,WAASL,SAAT,CAAoB,EAAE,GAAGG;AAAL,GAApB,EAAsC;AACpC,WAAO,EACL,GAAGA,SADE,CAEL;AACA;;AAHK,KAAP;AAKD;AACJ","sourcesContent":["import requiredParam from '../helpers/required-param';\nimport { InvalidPropertyError } from '../helpers/errors';\nimport isValidEmail from '../helpers/is-valid-email.js';\nimport upperFirst from '../helpers/upper-first';\n\nexport default function makeBank(\n    bankInfo = requiredParam('bankInfo')\n){\n    \n    const validBank = validate(bankInfo);\n    const normalBank = normalize(validBank);\n    return Object.freeze(normalBank);\n\n    function validate ({\n        \n        ...otherInfo\n      } = {}) {\n        \n        return {...otherInfo }\n      }\n    \n    function validateName (label, name) {\n      if (name.length < 2) {\n        throw new InvalidPropertyError(\n          `Bank ${label} must be at least 2 characters long.`\n        )\n      }\n    }\n\n    function normalize ({ ...otherInfo }) {\n      return {\n        ...otherInfo,\n        //account_name: upperFirst(account_name),\n        //bank: upperFirst(bank)\n      }\n    }\n}\n"],"file":"bank.js"}