{"version":3,"sources":["../../src/db/index.js"],"names":["require","config","makeDb","MongoClient","mongodb","url","process","env","DATABASE_URL","dbName","client","useUnifiedTopology","keepAlive","connect","e","console","error","db","makeId","makeIdFromString","id","ObjectID"],"mappings":";;;;;;;AACA;;;;AADAA,OAAO,CAAC,QAAD,CAAP,CAAkBC,MAAlB;;AAKe,eAAeC,MAAf,GAAyB;AAEtC,QAAMC,WAAW,GAAGC,iBAAQD,WAA5B;AACA,QAAME,GAAG,GAAGC,OAAO,CAACC,GAAR,CAAYC,YAAxB;AACA,QAAMC,MAAM,GAAG,YAAf;AAEA,QAAMC,MAAM,GAAG,IAAIP,WAAJ,CAAgBE,GAAhB,EAAqB;AAAEM,IAAAA,kBAAkB,EAAE,IAAtB;AAA4BC,IAAAA,SAAS,EAAE;AAAvC,GAArB,CAAf;;AAGA,MAAI;AACF,UAAMF,MAAM,CAACG,OAAP,EAAN;AACD,GAFD,CAEE,OAAOC,CAAP,EAAU;AACVC,IAAAA,OAAO,CAACC,KAAR,CAAcF,CAAd;AACD;;AAED,QAAMG,EAAE,GAAG,MAAMP,MAAM,CAACO,EAAP,CAAUR,MAAV,CAAjB;AACAQ,EAAAA,EAAE,CAACC,MAAH,GAAYC,gBAAZ;AACA,SAAOF,EAAP;AAED;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACC;;AAED,SAASE,gBAAT,CAA2BC,EAA3B,EAA+B;AAC7B,SAAO,IAAIhB,iBAAQiB,QAAZ,CAAqBD,EAArB,CAAP;AACD","sourcesContent":["require('dotenv').config();\nimport mongodb from 'mongodb';\n\n\n\nexport default async function makeDb () {\n\n  const MongoClient = mongodb.MongoClient\n  const url = process.env.DATABASE_URL;\n  const dbName = 'wongafixDB'\n\n  const client = new MongoClient(url, { useUnifiedTopology: true, keepAlive: true,\n    })\n\n  try {\n    await client.connect()\n  } catch (e) {\n    console.error(e);\n  }\n  \n  const db = await client.db(dbName)\n  db.makeId = makeIdFromString\n  return db\n\n /* mongoClient.connect(url, { useUnifiedTopology: true }, (err, db) => {\n    if (err) {\n        console.log(\"Error creating database \"+err);\n    }\n    else{\n        console.log(\"Mongodb connected finally\");\n        //const myDb = db.db('pragmatic');\n\n        const myDb = db.db(dbName);\n        myDb.makeId = makeIdFromString\n        db.close();\n        return myDb\n    }\n  });\n*/\n\n/*\n  const client = new MongoClient(url, { useUnifiedTopology: true }\n  )\n  \n  await client.connect((err, db) => {\n    if (err) {\n      console.log(\"Error creating database \"+err);\n    }\n    else{\n        console.log(\"Mongodb connected finally\");\n        const myDb = db.db(dbName);\n        myDb.makeId = makeIdFromString\n        return myDb\n    }\n  })\n  //console.log(\"MongoDB connected!\");\n\n  */\n\n  \n  /*\n  try {\n    const db = await client.db(dbName)\n    db.makeId = makeIdFromString\n    return db\n  } catch (e) {\n    console.error(e);\n  }\n  */\n}\n\nfunction makeIdFromString (id) {\n  return new mongodb.ObjectID(id)\n}"],"file":"index.js"}